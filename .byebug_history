c
@post.video.save
@post.video.save!
@post.video?.save
@post.video?
@post.video_
@post.video_was
@post.video_url
c
 @post.video_was
 @post.video
 @post.video_url
<%= video_tag @post.video_url%>
<%= video_tag @post.video_url, controls: true %>
<%= video_tag @post.video, controls: true %>
c
value
c
value
c
value
c
            messages_url.@posts.find (params[:id])
            messages_url.@posts.find(params[:id])
            messages_url.Post.find(params[:id])
            message_url.Post.find(params[:id])
            message.Post.find(params[:id])
            message.@post.find(params[:id])
            messages.@post.find(params[:id])
            messages.@posts.find(params[:id])
            @post.messages.find(params[:id])
            @post.message.find(params[:id])
            @post.Message.find(params[:id])
            @post = Post.find_by(params[:id])
            @post = Post.find(params[:id])
            @post = Post.find_by(params[:id])
            @post = Post.find(params[:id])
c
xcc
@posts = Post.find_by('image')
@posts = Post.where('image')
@posts = Post.image_url
@posts = Post.image
@posts = Post.all 
c
@post = @message.posts.create(post_params)
c
        @post = @message.post.build
        @post = @message.@post.build
        @post = @messages.@post.build
        @post = @messages.@posts.build
        @post = @messages.posts.build
        @post = @messages.post.build
        @post = @message.post.bulid
        @post = @message.posts.create(post_params)
 @post = @messages.@post.create(post_params)
 @post = messages.create(post_params)
 @post = @messages.create(post_params)
 @post = @messages.@post.create(post_params)
 @post = @messages.posts.create(post_params)
 @post = @messages.post.create(post_params)
 @post = @message.post.create(post_params)
 @post = @message.@posts.create(post_params)
 @post = @message.@post.create(post_params)
 @post = @message.post.create(post_params)
 @post = messages.post.create(post_params)
 @post = @message.post.create(post_params)
 @post = @message.posts.create(post_params)
c
        @message = Message.find_by(params[:id])
        @message = Message.find(params[:id])
        @message = Message.find(params[:message_id])
c
 @message.posts.build
 @message.Posts.build
 @message.Post.build
 @message.post.build
 @message.post.build(message_id)
 @message.posts.build(message_id)
 @message.posts.build
        @post = Post.new
c
 @post.messages.build()
 @post.messages.build
 @post.messages_build
 @post.messages_build(message_artibutes)
 @post.messages_build(message_params)
 @post.messages_build(message)
 @post.messages_build(message_ids)
 @post.messages_build(messages_url)
 @post.message_build(messages_url)
 @post.message_build(message_url)
 @post.message_build(message_ids)
 @post.message_build(messageids)
 @post.message_build(message_bulid)
 @post.message_build
 @post.message_bild
 @post.build_message
 @post.messages.build
 @post.messages.build(messages_url)
 @post.message.build(messages_url)
 @post.messages.build(messages_url)
 @post.messages.build(message_url)
 @post.messages.build(message_path)
 @post.messages.build(message_params)
  @post = Post.new 
message_params
c
user
params()
params(user_id)
params(user_id:)
params(user_id:1)
params
     @post = Post.find(params[:post_id])
        @like = @post.likes.find_by(params[:id])
      Like.where(user_id: current_user.id,post_id: params[:post_id]).exists?        
 already_liked?
        byebug
c
params[:post_id]
Post.find(params[:post_id])
Post.find_by(params[:post_id])
Post.find_by(params[:id])
params
Post.find(params[:post_id])
Post.find_by(params[:post_id])
params
c
params
Post.find_by(params[:id])
params
@post
already_liked?
c
        @like = @post.likes.find_by(params[:id]).present?
        @like = @post.likes.find_by(params[:id]).save
        @like = @post.likes.find_by(params[:id])
      Like.where(user_id: current_user.id,post_id: params[:post_id])        
      Like.where(user_id: current_user.id,post_id: params[:post_id]).exists?        
Post.find(params[:id])
Post.find_by(params[:id])
c
        @like = @post.likes.find_by(params[:id])
      Like.where(user_id: current_user.id,post_id: params[:post_id])
      Like.where(user_id: current_user.id,post_id: params[:post_id]).save!
      Like.where(user_id: current_user.id,post_id: params[:post_id]).save
      Like.where(user_id: current_user.id,post_id: params[:post_id])
      Like.where(user_id: current_user.id,post_id: params[:post_id]).existis
      Like.where(user_id: current_user.id,post_id: params[:post_id]).existit
      Like.where(user_id: current_user.id,post_id: params[:post_id]).existis?        
        @post.likes.create(user_id: current_user.id)
        @like = @post.likes.find_by(params[:id])
        @like = @post.likes.find(params[:id])
     @post = Post.find(params[:id])
 Like.where(user_id: current_user.id,post_id: params[:post_id])
 Like.where(user_id: current_user.id,post_id: params[:post_id]).existis?        
c
 @post = Post.new(post_params)
 @post.user_id = current_user.id @post = Post.new(post_params)
 @post.user_id = current_user.id
 @comment.user_id = current_user.id
 @post.user_id = current_user.id
 @comment.user_id = current_user.id
c
params.require(:Post).cpermit(:image)
params.require(:Post).permit(:image)
params.require(:post).permit(:image)
params.require.permit(:image)
params.require(:).permit(:image)
params.require(:posts).permit(:image)
params.require(:post).permit(:image)
 @post = Post.new(post_params)
c
  @post = Post.new(post_params).save
  @post = Post.new(post_params).save!
  @post = Post.new(post_params).save
  @post = Post.new(post_params)
        @post= Post.new
c
@post= Post.new(post_params)
c
  @post = Post.new(post_params)
  @post = Post.new(params_permit)
  @post = Post.new(params.require(:post).permit(:image,:like_id))
c
x
@post = Post.new(image:" ",like_id: 1)
@post.save
@post = Post.new(image:" ",like_id: 1)
@post = Post.new(:image" ",:like_id 1)
@post = Post.new(:image,:like_id)
@post = Post.new(params.require(:post).permit(:image,:like_id))
c
Post.new(post_params)
current_user.id
 @post = Post.new(post_params)current_user.id
 @post = Post.new(post_params)
c
  @post = Post.new(image:"",user_id:1)c
  @post = Post.new(image:"",user_id:1)
  @post = Post.new(image:"")
  @post = Post.new()
  @post = Post.new(post_params)
c
@post = Post.new(image:"sa.jpg" )
@post = Post.new(image"sa.jpg" )
@post = Post.new("sa.jpg" )
@post = Post.new("sa.jpg" ,1,1)
@post = Post.new(image:"sa.jpg" ,user_id:1,like_id:1)
@post = Post.new((image:"sa.jpg" like_id:1))
@post = Post.new((image:"sa.jpg",like_id:1))
@post = Post.new((image:"sa.jpg" ,user_id:1,like_id:1))
@post = Post.new((image:"sa.jpg" user_id:1,like_id:1))
@post = Post.new((image:"sa.jpg",user_id:1,like_id:1))
@post = Post.new((image:"sa", user_id:1,like_id:1))
@post = Post.new(params.require(:post).permit(:image, :user_id,:like_id))
@post = Post.new(post_params        params.require(:post).permit(:image, :user_id,:like_id))
@post = Post.new(post_params)
 @post = Post.new
c
Post.create
c
        params.require(:post).permit(:image, :user_id)
@post = Post.new(image:"ea.jpg",like_id:1)
@post = Post.new(image:"ea.jpg",like_id:1,user_id:2)
@post = Post.new
@post = Post.new(image:"")
@post = Post.new(image:"",user_id:1)
@post = Post.new(post_params)
@post = Post.new
c
      redirect_to message_path  
        end
        @comment.likes.create(user_id: current_user.id)
        else
        flash[:notice] = ""
if already_liked?
@message.comments.find_by(params[:id])
c
      @comment.likes.create(user_id: current_user.id)
     @comment = @message.comments.find_by(params[:id])
c
            @message.comments.likes.create(user_id:current_user.id)
            @message.comments.Likes.create(user_id:current_user.id)
            @message.comments.Like.create(user_id:current_user.id)
            @message.comments.likes.create(user_id:current_user.id)
            @comment.create(user_id:current_user.id)
            @comment.likes.create(user_id:current_user.id)
            @post.lcreate(user_id:current_user.id)
 @message.comments.like
 @message.comments.likes
 @message.comments
 @comment        
 @comment.like.find(params[:id])        
        @like = @comment.find_by(params[:id])        
